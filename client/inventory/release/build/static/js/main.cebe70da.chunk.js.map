{"version":3,"sources":["components/Path.js","components/Login.js","components/Inventory.js","components/App.js","index.js"],"names":["Path","Login","Inventory","axios","require","useStyles","makeStyles","theme","button","borderRadius","marginTop","height","props","classes","useState","userId","setUserId","password","setPassword","Box","display","flexDirection","justifyContent","alignItems","flex","noValidate","autoComplete","TextField","id","variant","margin","required","e","target","value","label","type","onChange","Button","className","color","fullWidth","onClick","post","user_id","then","response","status","console","log","window","location","catch","error","root","spacing","table","minWidth","fab","position","right","formControl","assets","setAssets","open","setOpen","search","setSearch","update","setUpdate","setId","serialNumber","setSerialNumber","brand","setBrand","model","setModel","setStatus","handleStatusChange","event","React","Date","selectedDate","setSelectedDate","selectedFrom","setSelectedFrom","selectedTo","setSelectedTo","useEffect","get","data","handleOnClose","handleOnSearchClose","Fragment","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","created","serial_number","asset","delete","handleOnDelete","Fab","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","utils","DateFnsUtils","disableToolbar","format","date","KeyboardButtonProps","autoFocus","FormControl","InputLabel","Select","labelId","MenuItem","DialogActions","put","moment","range","from","to","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cebe70da.chunk.js","sourcesContent":["const Login = \"/\";\nconst Inventory = \"/inventory-ui\";\n\nconst Path = {\n  Login,\n  Inventory,\n};\n\nexport default Path;\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Path from \"./Path\";\n\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    borderRadius: \"50px\",\n    marginTop: \"10px\",\n    height: \"45px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n\n  const [userId, setUserId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleOnLogin = () => {\n    axios\n      .post(\"/inventory/v1/sessions\", {\n        user_id: userId,\n        password: password,\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          console.log(\"success\");\n          window.location = Path.Inventory;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <Box\n      display={\"flex\"}\n      flexDirection={\"column\"}\n      justifyContent={\"center\"}\n      alignItems={\"center\"}\n      flex={1}\n      height={\"98vh\"}\n    >\n      <Box\n        display={\"flex\"}\n        flex={1}\n        flexDirection={\"column\"}\n        justifyContent={\"center\"}\n      >\n        <form noValidate autoComplete=\"off\">\n          <div>\n            <TextField\n              id=\"userid\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              id=\"outlined-required\"\n              label=\"Required\"\n              value={userId}\n              onChange={(e) => setUserId(e.target.value)}\n            />\n            <br />\n            <TextField\n              id=\"password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              label=\"Password\"\n              type=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <br />\n            <Button\n              className={classes.button}\n              color=\"primary\"\n              fullWidth\n              variant=\"contained\"\n              onClick={handleOnLogin}\n            >\n              Login\n            </Button>\n          </div>\n        </form>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Button from \"@material-ui/core/Button\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport TextField from \"@material-ui/core/TextField\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\nimport Path from \"./Path\";\nimport moment from \"moment\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst axios = require(\"axios\");\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  table: {\n    minWidth: 650,\n  },\n  fab: {\n    position: \"absolute\",\n    right: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nconst Inventory = (props) => {\n  const classes = useStyles();\n\n  const [assets, setAssets] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [search, setSearch] = useState(false);\n  const [update, setUpdate] = useState(false);\n\n  const [id, setId] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [brand, setBrand] = useState(\"\");\n  const [model, setModel] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n\n  const handleStatusChange = (event) => {\n    setStatus(event.target.value);\n  };\n\n  const [selectedDate, setSelectedDate] = React.useState(\n    new Date(\"2020-07-01T00:00:00\")\n  );\n\n  const [selectedFrom, setSelectedFrom] = React.useState(\n    new Date(\"2020-07-01T00:00:00\")\n  );\n\n  const [selectedTo, setSelectedTo] = React.useState(\n    new Date(\"2020-07-01T00:00:00\")\n  );\n\n  useEffect(() => {\n    axios\n      .get(\"/inventory/v1/assets\")\n      .then(function (response) {\n        if (response.data) {\n          setAssets(response.data);\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, [open]);\n\n  const handleOnDateChange = (date) => {\n    setSelectedDate(date);\n  };\n\n  const handleOnFromChange = (date) => {\n    setSelectedFrom(date);\n  };\n\n  const handleOnToChange = (date) => {\n    setSelectedTo(date);\n  };\n\n  const handleOnOpen = () => {\n    setOpen(true);\n  };\n\n  const handleOnSearchOpen = () => {\n    setSearch(true);\n  };\n\n  const handleOnClose = () => {\n    if (update) setUpdate(false);\n    setOpen(false);\n  };\n\n  const handleOnSearchClose = () => {\n    setSearch(false);\n  };\n\n  const handleOnSearch = () => {\n    var range = {\n      from: moment(selectedFrom).format(\"YYYY-MM-DD\"),\n      to: moment(selectedTo).format(\"YYYY-MM-DD\"),\n    };\n\n    axios\n      .post(\"/inventory/v1/assets/action/search\", {\n        range: range,\n        model: model,\n        brand: brand,\n        serial_number: serialNumber,\n        status: status,\n      })\n      .then(function (response) {\n        if (response.status === 200) {\n          setAssets(response.data);\n        }\n        if (response.status === 204) {\n          setAssets([]);\n        }\n\n        setSearch(false);\n      })\n      .catch(function (error) {\n        console.log(error);\n        setSearch(false);\n      });\n  };\n\n  const handleOnAdd = () => {\n    if (update) {\n      axios\n        .put(\"/inventory/v1/assets/\" + id, {\n          created: moment(selectedDate).format(\"YYYY-MM-DD\"),\n          model: model,\n          brand: brand,\n          serial_number: serialNumber,\n          status: status,\n        })\n        .then(function (response) {\n          if (response.status === 200) {\n            setUpdate(false);\n            setOpen(false);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          setUpdate(false);\n          setOpen(false);\n        });\n    } else {\n      axios\n        .post(\"/inventory/v1/assets\", {\n          created: selectedDate,\n          model: model,\n          brand: brand,\n          serial_number: serialNumber,\n        })\n        .then(function (response) {\n          if (response.status === 200) {\n            setOpen(false);\n          }\n        })\n        .catch(function (error) {\n          console.log(error);\n          setOpen(false);\n        });\n    }\n  };\n\n  const handleOnDelete = (id) => {\n    axios\n      .delete(\"/inventory/v1/assets/\" + id)\n      .then(function (response) {\n        if (response.status === 200) {\n          // TODO : HOW TO HANDLE IT MORE GRACEFULLY\n          window.location = Path.Inventory;\n        }\n      })\n      .catch(function (error) {\n        console.log(error);\n        // TODO : HOW TO HANDLE IT MORE GRACEFULLY\n        window.location = Path.Inventory;\n      });\n  };\n\n  const handleOnEdit = (asset) => {\n    setId(asset.id);\n    setSelectedDate(asset.created);\n    setBrand(asset.brand);\n    setModel(asset.model);\n    setStatus(asset.status);\n    setSerialNumber(asset.serial_number);\n\n    setUpdate(true);\n    setOpen(true);\n  };\n\n  return (\n    <React.Fragment>\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>ID</TableCell>\n              <TableCell align=\"left\">Date Added</TableCell>\n              <TableCell align=\"left\">Brand</TableCell>\n              <TableCell align=\"left\">Model</TableCell>\n              <TableCell align=\"left\">Serial Number</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n              <TableCell align=\"left\">Update</TableCell>\n              <TableCell align=\"left\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {assets.map((row) => (\n              <TableRow key={row.id}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </TableCell>\n                <TableCell align=\"left\">{row.created}</TableCell>\n                <TableCell align=\"left\">{row.brand}</TableCell>\n                <TableCell align=\"left\">{row.model}</TableCell>\n                <TableCell align=\"left\">{row.serial_number}</TableCell>\n                <TableCell align=\"left\">{row.status}</TableCell>\n                <TableCell align=\"left\">\n                  <Button onClick={() => handleOnEdit(row)}>\n                    <EditIcon />\n                  </Button>\n                </TableCell>\n                <TableCell align=\"left\">\n                  <Button onClick={() => handleOnDelete(row.id)}>\n                    <DeleteIcon />\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <div className={classes.fab}>\n        {/*Floating Action Button to Add Items*/}\n        <Fab color=\"primary\" aria-label=\"add\" onClick={handleOnOpen}>\n          <AddIcon />\n        </Fab>\n        {/*Floating Action Button to Search Items*/}\n        <Fab color=\"secondary\" aria-label=\"edit\" onClick={handleOnSearchOpen}>\n          <SearchIcon />\n        </Fab>\n      </div>\n\n      {/*Form Dialog to Add Items*/}\n      <Dialog\n        open={open}\n        onClose={handleOnClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          {update ? \"Update\" : \"Add\"} Items\n        </DialogTitle>\n        <DialogContent>\n          <div>\n            {update ? (\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <KeyboardDatePicker\n                  disableToolbar\n                  variant=\"inline\"\n                  format=\"MM/dd/yyyy\"\n                  margin=\"normal\"\n                  id=\"date-picker-inline\"\n                  label=\"Date\"\n                  value={selectedDate}\n                  onChange={handleOnDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </MuiPickersUtilsProvider>\n            ) : null}\n          </div>\n\n          <TextField\n            required\n            autoFocus\n            id=\"brand\"\n            label=\"Brand\"\n            type=\"text\"\n            fullWidth\n            value={update ? brand : null}\n            onChange={(e) => setBrand(e.target.value)}\n          />\n          <TextField\n            required\n            autoFocus\n            id=\"model\"\n            label=\"Model\"\n            type=\"text\"\n            fullWidth\n            value={update ? model : null}\n            onChange={(e) => setModel(e.target.value)}\n          />\n          <TextField\n            required\n            autoFocus\n            id=\"serial_number\"\n            label=\"Serial Number\"\n            type=\"text\"\n            fullWidth\n            value={update ? serialNumber : null}\n            onChange={(e) => setSerialNumber(e.target.value)}\n          />\n          {update ? (\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={update ? status : null}\n                onChange={handleStatusChange}\n              >\n                <MenuItem value={\"Available\"}>Available</MenuItem>\n                <MenuItem value={\"Not Available\"}>Not Available</MenuItem>\n              </Select>\n            </FormControl>\n          ) : null}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleOnClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleOnAdd} color=\"primary\">\n            {update ? `Update` : `Add`}\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      {/*Form Dialog to Search Items*/}\n      <Dialog\n        open={search}\n        onClose={handleOnSearchClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title-search\">Search Items</DialogTitle>\n        <DialogContent>\n          <div>\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"From\"\n                value={selectedFrom}\n                onChange={handleOnFromChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </MuiPickersUtilsProvider>\n\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\n              <KeyboardDatePicker\n                disableToolbar\n                variant=\"inline\"\n                format=\"MM/dd/yyyy\"\n                margin=\"normal\"\n                id=\"date-picker-inline\"\n                label=\"To\"\n                value={selectedTo}\n                onChange={handleOnToChange}\n                KeyboardButtonProps={{\n                  \"aria-label\": \"change date\",\n                }}\n              />\n            </MuiPickersUtilsProvider>\n          </div>\n\n          <TextField\n            required\n            autoFocus\n            id=\"brand\"\n            label=\"Brand\"\n            type=\"text\"\n            fullWidth\n            value={update ? brand : null}\n            onChange={(e) => setBrand(e.target.value)}\n          />\n          <TextField\n            required\n            autoFocus\n            id=\"model\"\n            label=\"Model\"\n            type=\"text\"\n            fullWidth\n            value={update ? model : null}\n            onChange={(e) => setModel(e.target.value)}\n          />\n          <TextField\n            required\n            autoFocus\n            id=\"serial_number\"\n            label=\"Serial Number\"\n            type=\"text\"\n            fullWidth\n            value={update ? serialNumber : null}\n            onChange={(e) => setSerialNumber(e.target.value)}\n          />\n\n          <FormControl className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={status}\n              onChange={handleStatusChange}\n            >\n              <MenuItem value={\"Available\"}>Available</MenuItem>\n              <MenuItem value={\"Not Available\"}>Not Available</MenuItem>\n            </Select>\n          </FormControl>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleOnSearchClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleOnSearch} color=\"primary\">\n            Search\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n};\n\nexport default Inventory;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport Path from \"./Path\";\nimport Login from \"./Login\";\nimport Inventory from \"./Inventory\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path={Path.Login} component={Login} />\n        <Route exact path={Path.Inventory} component={Inventory} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Routes from \"./components/routes\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}